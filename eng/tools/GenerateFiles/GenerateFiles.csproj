<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- Use fixed version instead of $(DefaultNetCoreTargetFramework) to avoid needing workarounds set up here. -->
    <TargetFramework>net5.0</TargetFramework>
    <ExcludeFromSourceBuild>false</ExcludeFromSourceBuild>

    <ConfigDirectory>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', '.config'))</ConfigDirectory>

    <!--
      Handle runtime versions before final SDK is available. This can happen when building against a non-stable
      SDK (say, 7.0.100-rc.1.22431.12 or 7.0.100-rtm.22478.12) for RTM or first service release (7.0.0 or 7.0.1 here).
    -->
    <OverrideNETCoreDefaultInServicing>false</OverrideNETCoreDefaultInServicing>
    <OverrideNETCoreDefaultInServicing Condition=" $(BundledNETCoreAppPackageVersion.Contains('-')) AND
        !$(MicrosoftNETCoreAppRuntimeVersion.Contains('-'))">true</OverrideNETCoreDefaultInServicing>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(OverrideNETCoreDefaultInServicing)' == 'true' ">
    <MicrosoftNETCoreAppRuntimeRTMVersion>$(MicrosoftNETCoreAppRuntimeVersion.Split(".")[0]).$(MicrosoftNETCoreAppRuntimeVersion.Split(".")[1]).0</MicrosoftNETCoreAppRuntimeRTMVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Templating" PrivateAssets="All" Version="$(MicrosoftDotNetBuildTasksTemplatingVersion)" IsImplicitlyDefined="true" />
  </ItemGroup>

  <!-- Update artifacts/bin/GenerateFiles/Directory.Build.* files. -->
  <Target Name="GenerateDirectoryBuildFiles">
    <PropertyGroup>
      <_TemplateProperties>
        AspNetCorePatchVersion=$(AspNetCorePatchVersion);
        DefaultNetCoreTargetFramework=$(DefaultNetCoreTargetFramework);
        DotnetDumpVersion=$(DotnetDumpVersion);
        DotnetEfVersion=$(DotnetEfVersion);
        DotnetServeVersion=$(DotnetServeVersion);
        MicrosoftAspNetCoreAppRefVersion=$(TargetingPackVersion);
        MicrosoftAspNetCoreAppRuntimeVersion=$(SharedFxVersion);
        MicrosoftNETCoreAppRefVersion=$(MicrosoftNETCoreAppRefVersion);
        MicrosoftNETCoreAppRuntimeVersion=$(MicrosoftNETCoreAppRuntimeVersion);
        MicrosoftNETCoreAppRuntimeRTMVersion=$(MicrosoftNETCoreAppRuntimeRTMVersion);
        MicrosoftPlaywrightCLIVersion=$(MicrosoftPlaywrightCLIVersion);
        OverrideNETCoreDefaultInServicing=$(OverrideNETCoreDefaultInServicing);
        LibNetHostAppPackVersion=$(BundledNETCoreAppPackageVersion);
        SupportedRuntimeIdentifiers=$(SupportedRuntimeIdentifiers.Trim())
      </_TemplateProperties>
    </PropertyGroup>

    <MakeDir Directories="$(BaseOutputPath)" />

    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $(BaseOutputPath)Directory.Build.props" />
    <GenerateFileFromTemplate TemplateFile="$(MSBuildThisFileDirectory)Directory.Build.props.in"
      Properties="$(_TemplateProperties)"
      OutputPath="$(BaseOutputPath)Directory.Build.props" />

    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $(BaseOutputPath)Directory.Build.targets" />
    <GenerateFileFromTemplate TemplateFile="$(MSBuildThisFileDirectory)Directory.Build.targets.in"
      Properties="$(_TemplateProperties)"
      OutputPath="$(BaseOutputPath)Directory.Build.targets" />

    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $(ConfigDirectory)dotnet-tools.json" />
    <GenerateFileFromTemplate TemplateFile="$(MSBuildThisFileDirectory)dotnet-tools.json.in"
      Properties="$(_TemplateProperties)"
      OutputPath="$(ConfigDirectory)dotnet-tools.json" />
  </Target>
</Project>
