<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(RepoRoot)eng/Build.props" />

  <PropertyGroup>
    <!-- Use fixed version instead of $(DefaultNetCoreTargetFramework) to avoid needing workarounds set up here. -->
    <TargetFramework>net5.0</TargetFramework>
    <ExcludeFromSourceBuild>false</ExcludeFromSourceBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Templating" PrivateAssets="All" Version="$(MicrosoftDotNetBuildTasksTemplatingVersion)" IsImplicitlyDefined="true" />
  </ItemGroup>

  <!-- Update artifacts/bin/GenerateFiles/Directory.Build.* files. -->
  <Target Name="GenerateDirectoryBuildFiles">
    <PropertyGroup>
      <!--
        Are we going to build Framework projects unconditionally? The listed projects are App.Runtime or have
        unconditional references to App.Runtime. Other projects reference App.Runtime but mostly use this in their
        conditions to minimize reference duplication. Installers and Site Extension projects are a special case
        because they build separately and can make assumptions about what was built in earlier steps. (Cannot make
        assumptions about RunHelix.ps1 given DoNotRequireSharedFxHelix and "inner" references to App projects.)
      -->
      <_IsFrameworkBuilding>false</_IsFrameworkBuilding>
      <_IsFrameworkBuilding Condition=" '@(ProjectToBuild)' != '' AND
        ('$(IsHelixJob)' == 'true' OR
         @(ProjectToBuild -> AnyHaveMetadataValue('Identity', '$(RepoRoot)src\Framework\App.Ref\src\Microsoft.AspNetCore.App.Ref.csproj')) OR
         @(ProjectToBuild -> AnyHaveMetadataValue('Identity', '$(RepoRoot)src\Framework\App.Runtime\src\Microsoft.AspNetCore.App.Runtime.csproj')) OR
         @(ProjectToBuild -> AnyHaveMetadataValue('Identity', '$(RepoRoot)src\Grpc\InteropTests\*.csproj'))) ">true</_IsFrameworkBuilding>

      <_TemplateProperties>
        AspNetCorePatchVersion=$(AspNetCorePatchVersion);
        DefaultNetCoreTargetFramework=$(DefaultNetCoreTargetFramework);
        IsFrameworkBuilding=$(_IsFrameworkBuilding);
        MicrosoftAspNetCoreAppRefVersion=$(TargetingPackVersion);
        MicrosoftAspNetCoreAppRuntimeVersion=$(SharedFxVersion);
        MicrosoftNETCoreAppRefVersion=$(MicrosoftNETCoreAppRefVersion);
        MicrosoftNETCoreAppRuntimeVersion=$(MicrosoftNETCoreAppRuntimeVersion);
        SupportedRuntimeIdentifiers=$(SupportedRuntimeIdentifiers.Trim())
      </_TemplateProperties>
    </PropertyGroup>

    <MakeDir Directories="$(BaseOutputPath)" />

    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $(BaseOutputPath)Directory.Build.props" />
    <GenerateFileFromTemplate TemplateFile="$(MSBuildThisFileDirectory)Directory.Build.props.in"
      Properties="$(_TemplateProperties)"
      OutputPath="$(BaseOutputPath)Directory.Build.props" />

    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; $(BaseOutputPath)Directory.Build.targets" />
    <GenerateFileFromTemplate TemplateFile="$(MSBuildThisFileDirectory)Directory.Build.targets.in"
      Properties="$(_TemplateProperties)"
      OutputPath="$(BaseOutputPath)Directory.Build.targets" />
  </Target>
</Project>
